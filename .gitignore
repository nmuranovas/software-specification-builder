### Frontend files ###

# dependencies
/frontend/node_modules
/frontend/.pnp
/frontend.pnp.js

# testing
/frontend/coverage

# production
/frontend/build

# misc
/frontend/.DS_Store
/frontend/.env.local
/frontend/.env.development.local
/frontend/.env.test.local
/frontend/.env.production.local

/frontend/npm-debug.log*
/frontend/yarn-debug.log*
/frontend/yarn-error.log*

### Backend ignore files ###

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
/backend/*.suo
/backend/*.user
/backend/*.userosscache
/backend/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
/backend/*.userprefs

# Build results
/backend/[Dd]ebug/
/backend/[Dd]ebugPublic/
/backend/[Rr]elease/
/backend/[Rr]eleases/
/backend/x64/
/backend/x86/
/backend/build/
/backend/bld/
/backend/[Bb]in/
/backend/[Oo]bj/

# Visual Studio 2015 cache/options directory
/backend/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
/backend/[Tt]est[Rr]esult*/
/backend/[Bb]uild[Ll]og.*

# NUNIT
/backend/*.VisualState.xml
/backend/TestResult.xml

# Build Results of an ATL Project
/backend/[Dd]ebugPS/
/backend/[Rr]eleasePS/
/backend/dlldata.c

# DNX
/backend/project.lock.json
/backend/artifacts/

/backend/*_i.c
/backend/*_p.c
/backend/*_i.h
/backend/*.ilk
/backend/*.meta
/backend/*.obj
/backend/*.pch
/backend/*.pdb
/backend/*.pgc
/backend/*.pgd
/backend/*.rsp
/backend/*.sbr
/backend/*.tlb
/backend/*.tli
/backend/*.tlh
/backend/*.tmp
/backend/*.tmp_proj
/backend/*.log
/backend/*.vspscc
/backend/*.vssscc
/backend/.builds
/backend/*.pidb
/backend/*.svclog
/backend/*.scc

# Chutzpah Test files
/backend/_Chutzpah*

# Visual Studio profiler
/backend/*.psess
/backend/*.vsp
/backend/*.vspx
/backend/*.sap

# TFS 2012 Local Workspace
/backend/$tf/

# Guidance Automation Toolkit
/backend/*.gpState

# ReSharper is a .NET coding add-in
/backend/_ReSharper*/
/backend/*.[Rr]e[Ss]harper
/backend/*.DotSettings.user

# JustCode is a .NET coding add-in
/backend/.JustCode

# TeamCity is a build add-in
/backend/_TeamCity*

# DotCover is a Code Coverage Tool
/backend/*.dotCover

# NCrunch
/backend/_NCrunch_*
/backend/.*crunch*.local.xml
/backend/nCrunchTemp_*

# MightyMoose
/backend/*.mm.*
/backend/AutoTest.Net/

# Web workbench (sass)
/backend/.sass-cache/

# Installshield output folder
/backend/[Ee]xpress/

# DocProject is a documentation generator add-in
/backend/DocProject/buildhelp/
/backend/DocProject/Help/*.HxT
/backend/DocProject/Help/*.HxC
/backend/DocProject/Help/*.hhc
/backend/DocProject/Help/*.hhk
/backend/DocProject/Help/*.hhp
/backend/DocProject/Help/Html2
/backend/DocProject/Help/html

# Click-Once directory
/backend/publish/

# Publish Web Output
/backend/*.[Pp]ublish.xml
/backend/*.azurePubxml
# but database connection strings (with potential passwords) will be unencrypted
/backend/*.pubxml
/backend/*.publishproj

# NuGet Packages
/backend/*.nupkg
# The packages folder can be ignored because of Package Restore
/backend/**/packages/*
# except build/, which is used as an MSBuild target.
/backend/!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Microsoft Azure Build Output
/backend/csx/
/backend/*.build.csdef

# Microsoft Azure Emulator
/backend/ecf/
/backend/rcf/

# Microsoft Azure ApplicationInsights config file
/backend/ApplicationInsights.config

# Windows Store app package directory
/backend/AppPackages/
/backend/BundleArtifacts/

# Visual Studio cache files
# files ending in .cache can be ignored
/backend/*.[Cc]ache
# but keep track of directories ending in .cache
/backend/!*.[Cc]ache/

# Others
/backend/ClientBin/
/backend/~$*
/backend/*~
/backend/*.dbmdl
/backend/*.dbproj.schemaview
/backend/*.pfx
/backend/*.publishsettings
/backend/node_modules/
/backend/orleans.codegen.cs

# RIA/Silverlight projects
/backend/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
/backend/_UpgradeReport_Files/
/backend/Backup*/
/backend/UpgradeLog*.XML
/backend/UpgradeLog*.htm

# SQL Server files
/backend/*.mdf
/backend/*.ldf

# Business Intelligence projects
/backend/*.rdl.data
/backend/*.bim.layout
/backend/*.bim_*.settings

# Microsoft Fakes
/backend/FakesAssemblies/

# GhostDoc plugin setting file
/backend/*.GhostDoc.xml

# Node.js Tools for Visual Studio
/backend/.ntvs_analysis.dat

# Visual Studio 6 build log
/backend/*.plg

# Visual Studio 6 workspace options file
/backend/*.opt

# Visual Studio LightSwitch build output
/backend/**/*.HTMLClient/GeneratedArtifacts
/backend/**/*.DesktopClient/GeneratedArtifacts
/backend/**/*.DesktopClient/ModelManifest.xml
/backend/**/*.Server/GeneratedArtifacts
/backend/**/*.Server/ModelManifest.xml
/backend/_Pvt_Extensions

# Paket dependency manager
/backend/.paket/paket.exe

# FAKE - F# Make
/backend/.fake/